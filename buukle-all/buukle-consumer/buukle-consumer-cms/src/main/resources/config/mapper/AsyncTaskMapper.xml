<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.buukle.consumer.cms.dao.AsyncTaskMapper" >
  <resultMap id="BaseResultMap" type="top.buukle.consumer.cms.entity.AsyncTask" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    <result column="method_name" property="methodName" jdbcType="VARCHAR" />
    <result column="parameter" property="parameter" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="alarm_mail" property="alarmMail" jdbcType="VARCHAR" />
    <result column="start_alarm" property="startAlarm" jdbcType="INTEGER" />
    <result column="stop_alarm" property="stopAlarm" jdbcType="INTEGER" />
    <result column="error_alarm" property="errorAlarm" jdbcType="INTEGER" />
    <result column="cron_expression" property="cronExpression" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="runType" property="runtype" jdbcType="INTEGER" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="creator_code" property="creatorCode" jdbcType="VARCHAR" />
    <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="VARCHAR" />
    <result column="modifier_code" property="modifierCode" jdbcType="VARCHAR" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="bak01" property="bak01" jdbcType="VARCHAR" />
    <result column="bak02" property="bak02" jdbcType="VARCHAR" />
    <result column="bak03" property="bak03" jdbcType="VARCHAR" />
    <result column="bak04" property="bak04" jdbcType="VARCHAR" />
    <result column="bak05" property="bak05" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, class_name, method_name, parameter, description, alarm_mail, start_alarm, stop_alarm, 
    error_alarm, cron_expression, start_date, type, runType, creator, creator_code, gmt_created, 
    modifier, modifier_code, gmt_modified, status, bak01, bak02, bak03, bak04, bak05
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="top.buukle.consumer.cms.entity.AsyncTaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from async_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from async_task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from async_task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="top.buukle.consumer.cms.entity.AsyncTaskExample" >
    delete from async_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.buukle.consumer.cms.entity.AsyncTask" >
    insert into async_task (id, class_name, method_name, 
      parameter, description, alarm_mail, 
      start_alarm, stop_alarm, error_alarm, 
      cron_expression, start_date, type, 
      runType, creator, creator_code, 
      gmt_created, modifier, modifier_code, 
      gmt_modified, status, bak01, 
      bak02, bak03, bak04, 
      bak05)
    values (#{id,jdbcType=INTEGER}, #{className,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}, 
      #{parameter,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{alarmMail,jdbcType=VARCHAR}, 
      #{startAlarm,jdbcType=INTEGER}, #{stopAlarm,jdbcType=INTEGER}, #{errorAlarm,jdbcType=INTEGER}, 
      #{cronExpression,jdbcType=VARCHAR}, #{startDate,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, 
      #{runtype,jdbcType=INTEGER}, #{creator,jdbcType=VARCHAR}, #{creatorCode,jdbcType=VARCHAR}, 
      #{gmtCreated,jdbcType=TIMESTAMP}, #{modifier,jdbcType=VARCHAR}, #{modifierCode,jdbcType=VARCHAR}, 
      #{gmtModified,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{bak01,jdbcType=VARCHAR}, 
      #{bak02,jdbcType=VARCHAR}, #{bak03,jdbcType=VARCHAR}, #{bak04,jdbcType=VARCHAR}, 
      #{bak05,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="top.buukle.consumer.cms.entity.AsyncTask" >
    insert into async_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="className != null" >
        class_name,
      </if>
      <if test="methodName != null" >
        method_name,
      </if>
      <if test="parameter != null" >
        parameter,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="alarmMail != null" >
        alarm_mail,
      </if>
      <if test="startAlarm != null" >
        start_alarm,
      </if>
      <if test="stopAlarm != null" >
        stop_alarm,
      </if>
      <if test="errorAlarm != null" >
        error_alarm,
      </if>
      <if test="cronExpression != null" >
        cron_expression,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="runtype != null" >
        runType,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="creatorCode != null" >
        creator_code,
      </if>
      <if test="gmtCreated != null" >
        gmt_created,
      </if>
      <if test="modifier != null" >
        modifier,
      </if>
      <if test="modifierCode != null" >
        modifier_code,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="bak01 != null" >
        bak01,
      </if>
      <if test="bak02 != null" >
        bak02,
      </if>
      <if test="bak03 != null" >
        bak03,
      </if>
      <if test="bak04 != null" >
        bak04,
      </if>
      <if test="bak05 != null" >
        bak05,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="className != null" >
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null" >
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="parameter != null" >
        #{parameter,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="alarmMail != null" >
        #{alarmMail,jdbcType=VARCHAR},
      </if>
      <if test="startAlarm != null" >
        #{startAlarm,jdbcType=INTEGER},
      </if>
      <if test="stopAlarm != null" >
        #{stopAlarm,jdbcType=INTEGER},
      </if>
      <if test="errorAlarm != null" >
        #{errorAlarm,jdbcType=INTEGER},
      </if>
      <if test="cronExpression != null" >
        #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="runtype != null" >
        #{runtype,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorCode != null" >
        #{creatorCode,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null" >
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifierCode != null" >
        #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="bak01 != null" >
        #{bak01,jdbcType=VARCHAR},
      </if>
      <if test="bak02 != null" >
        #{bak02,jdbcType=VARCHAR},
      </if>
      <if test="bak03 != null" >
        #{bak03,jdbcType=VARCHAR},
      </if>
      <if test="bak04 != null" >
        #{bak04,jdbcType=VARCHAR},
      </if>
      <if test="bak05 != null" >
        #{bak05,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.buukle.consumer.cms.entity.AsyncTaskExample" resultType="java.lang.Integer" >
    select count(*) from async_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update async_task
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.className != null" >
        class_name = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.methodName != null" >
        method_name = #{record.methodName,jdbcType=VARCHAR},
      </if>
      <if test="record.parameter != null" >
        parameter = #{record.parameter,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.alarmMail != null" >
        alarm_mail = #{record.alarmMail,jdbcType=VARCHAR},
      </if>
      <if test="record.startAlarm != null" >
        start_alarm = #{record.startAlarm,jdbcType=INTEGER},
      </if>
      <if test="record.stopAlarm != null" >
        stop_alarm = #{record.stopAlarm,jdbcType=INTEGER},
      </if>
      <if test="record.errorAlarm != null" >
        error_alarm = #{record.errorAlarm,jdbcType=INTEGER},
      </if>
      <if test="record.cronExpression != null" >
        cron_expression = #{record.cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null" >
        start_date = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.runtype != null" >
        runType = #{record.runtype,jdbcType=INTEGER},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorCode != null" >
        creator_code = #{record.creatorCode,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreated != null" >
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifier != null" >
        modifier = #{record.modifier,jdbcType=VARCHAR},
      </if>
      <if test="record.modifierCode != null" >
        modifier_code = #{record.modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtModified != null" >
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.bak01 != null" >
        bak01 = #{record.bak01,jdbcType=VARCHAR},
      </if>
      <if test="record.bak02 != null" >
        bak02 = #{record.bak02,jdbcType=VARCHAR},
      </if>
      <if test="record.bak03 != null" >
        bak03 = #{record.bak03,jdbcType=VARCHAR},
      </if>
      <if test="record.bak04 != null" >
        bak04 = #{record.bak04,jdbcType=VARCHAR},
      </if>
      <if test="record.bak05 != null" >
        bak05 = #{record.bak05,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update async_task
    set id = #{record.id,jdbcType=INTEGER},
      class_name = #{record.className,jdbcType=VARCHAR},
      method_name = #{record.methodName,jdbcType=VARCHAR},
      parameter = #{record.parameter,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      alarm_mail = #{record.alarmMail,jdbcType=VARCHAR},
      start_alarm = #{record.startAlarm,jdbcType=INTEGER},
      stop_alarm = #{record.stopAlarm,jdbcType=INTEGER},
      error_alarm = #{record.errorAlarm,jdbcType=INTEGER},
      cron_expression = #{record.cronExpression,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=INTEGER},
      runType = #{record.runtype,jdbcType=INTEGER},
      creator = #{record.creator,jdbcType=VARCHAR},
      creator_code = #{record.creatorCode,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      modifier = #{record.modifier,jdbcType=VARCHAR},
      modifier_code = #{record.modifierCode,jdbcType=VARCHAR},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      bak01 = #{record.bak01,jdbcType=VARCHAR},
      bak02 = #{record.bak02,jdbcType=VARCHAR},
      bak03 = #{record.bak03,jdbcType=VARCHAR},
      bak04 = #{record.bak04,jdbcType=VARCHAR},
      bak05 = #{record.bak05,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.buukle.consumer.cms.entity.AsyncTask" >
    update async_task
    <set >
      <if test="className != null" >
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null" >
        method_name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="parameter != null" >
        parameter = #{parameter,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="alarmMail != null" >
        alarm_mail = #{alarmMail,jdbcType=VARCHAR},
      </if>
      <if test="startAlarm != null" >
        start_alarm = #{startAlarm,jdbcType=INTEGER},
      </if>
      <if test="stopAlarm != null" >
        stop_alarm = #{stopAlarm,jdbcType=INTEGER},
      </if>
      <if test="errorAlarm != null" >
        error_alarm = #{errorAlarm,jdbcType=INTEGER},
      </if>
      <if test="cronExpression != null" >
        cron_expression = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="runtype != null" >
        runType = #{runtype,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="creatorCode != null" >
        creator_code = #{creatorCode,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null" >
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifierCode != null" >
        modifier_code = #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="bak01 != null" >
        bak01 = #{bak01,jdbcType=VARCHAR},
      </if>
      <if test="bak02 != null" >
        bak02 = #{bak02,jdbcType=VARCHAR},
      </if>
      <if test="bak03 != null" >
        bak03 = #{bak03,jdbcType=VARCHAR},
      </if>
      <if test="bak04 != null" >
        bak04 = #{bak04,jdbcType=VARCHAR},
      </if>
      <if test="bak05 != null" >
        bak05 = #{bak05,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.buukle.consumer.cms.entity.AsyncTask" >
    update async_task
    set class_name = #{className,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      parameter = #{parameter,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      alarm_mail = #{alarmMail,jdbcType=VARCHAR},
      start_alarm = #{startAlarm,jdbcType=INTEGER},
      stop_alarm = #{stopAlarm,jdbcType=INTEGER},
      error_alarm = #{errorAlarm,jdbcType=INTEGER},
      cron_expression = #{cronExpression,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      runType = #{runtype,jdbcType=INTEGER},
      creator = #{creator,jdbcType=VARCHAR},
      creator_code = #{creatorCode,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=VARCHAR},
      modifier_code = #{modifierCode,jdbcType=VARCHAR},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      bak01 = #{bak01,jdbcType=VARCHAR},
      bak02 = #{bak02,jdbcType=VARCHAR},
      bak03 = #{bak03,jdbcType=VARCHAR},
      bak04 = #{bak04,jdbcType=VARCHAR},
      bak05 = #{bak05,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>