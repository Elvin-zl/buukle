<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="top.buukle.daoEntity.mc.dao.AsyncTaskMapper">
	<!-- 定义结果集 -->
	<resultMap type="top.buukle.daoEntity.mc.entity.AsyncTask" id="resultAsyncTask">
		<id property="id" column="id" javaType="Integer"/>
		<result property="className" column="class_name" javaType="String"/>
		<result property="methodName" column="method_name" javaType="String"/>
		<result property="parameter" column="parameter" javaType="String"/>
		<result property="description" column="description" javaType="String"/>
		<result property="alarmMail" column="alarm_mail" javaType="String"/>
		<result property="startAlarm" column="start_alarm" javaType="Integer"/>
		<result property="stopAlarm" column="stop_alarm" javaType="Integer"/>
		<result property="errorAlarm" column="error_alarm" javaType="Integer"/>
		<result property="cronExpression" column="cron_expression" javaType="String"/>
		<result property="startDate" column="start_date" javaType="java.util.Date"/>
		<result property="type" column="type" javaType="Integer"/>
		<result property="runType" column="runtype" javaType="Integer"/>
		<result property="creator" column="creator" javaType="String"/>
		<result property="creatorCode" column="creator_code" javaType="String"/>
		<result property="gmtCreated" column="gmt_created" javaType="java.util.Date"/>
		<result property="modifier" column="modifier" javaType="String"/>
		<result property="modifierCode" column="modifier_code" javaType="String"/>
		<result property="gmtModified" column="gmt_modified" javaType="java.util.Date"/>
		<result property="status" column="status" javaType="Integer"/>
		<result property="bak01" column="bak01" javaType="String"/>
		<result property="bak02" column="bak02" javaType="String"/>
		<result property="bak03" column="bak03" javaType="String"/>
		<result property="bak04" column="bak04" javaType="String"/>
		<result property="bak05" column="bak05" javaType="String"/>
	</resultMap>
	
	<sql id="Base_Column_insert">
        	#{className,jdbcType=VARCHAR},
        	#{methodName,jdbcType=VARCHAR},
        	#{parameter,jdbcType=VARCHAR},
        	#{description,jdbcType=VARCHAR},
        	#{alarmMail,jdbcType=VARCHAR},
        	#{startAlarm,jdbcType=INTEGER},
        	#{stopAlarm,jdbcType=INTEGER},
        	#{errorAlarm,jdbcType=INTEGER},
        	#{cronExpression,jdbcType=VARCHAR},
        	#{startDate,jdbcType=TIMESTAMP},
        	#{type,jdbcType=INTEGER},
        	#{runType,jdbcType=INTEGER},
        	#{creator,jdbcType=VARCHAR},
        	#{creatorCode,jdbcType=VARCHAR},
        	#{gmtCreated,jdbcType=TIMESTAMP},
        	#{modifier,jdbcType=VARCHAR},
        	#{modifierCode,jdbcType=VARCHAR},
        	#{gmtModified,jdbcType=TIMESTAMP},
        	#{status,jdbcType=INTEGER},
        	#{bak01,jdbcType=VARCHAR},
        	#{bak02,jdbcType=VARCHAR},
        	#{bak03,jdbcType=VARCHAR},
        	#{bak04,jdbcType=VARCHAR},
        	#{bak05,jdbcType=VARCHAR}
	</sql>
	
	<sql id="Base_query_column">
		id,class_name,method_name,parameter,description,alarm_mail,start_alarm,stop_alarm,error_alarm,cron_expression,start_date,type,runtype,creator,creator_code,gmt_created,modifier,modifier_code,gmt_modified,status,bak01,bak02,bak03,bak04,bak05
	</sql>
	
	<sql id="Base_query_where">
			 	<if test="id != null">
		          and id = #{id}
		         </if>
			 	<if test="className != null and className != ''">
		          and class_name = #{className}
		         </if>
			 	<if test="methodName != null and methodName != ''">
		          and method_name = #{methodName}
		         </if>
			 	<if test="parameter != null and parameter != ''">
		          and parameter = #{parameter}
		         </if>
			 	<if test="description != null and description != ''">
		          and description = #{description}
		         </if>
			 	<if test="alarmMail != null and alarmMail != ''">
		          and alarm_mail = #{alarmMail}
		         </if>
			 	<if test="startAlarm != null">
		          and start_alarm = #{startAlarm}
		         </if>
			 	<if test="stopAlarm != null">
		          and stop_alarm = #{stopAlarm}
		         </if>
			 	<if test="errorAlarm != null">
		          and error_alarm = #{errorAlarm}
		         </if>
			 	<if test="cronExpression != null and cronExpression != ''">
		          and cron_expression = #{cronExpression}
		         </if>
			 	<if test="startDate != null">
		          and start_date = #{startDate}
		         </if>
			 	<if test="type != null">
		          and type = #{type}
		         </if>
			 	<if test="runType != null">
		          and runtype = #{runType}
		         </if>
			 	<if test="creator != null and creator != ''">
		          and creator = #{creator}
		         </if>
			 	<if test="creatorCode != null and creatorCode != ''">
		          and creator_code = #{creatorCode}
		         </if>
			 	<if test="gmtCreated != null">
		          and gmt_created = #{gmtCreated}
		         </if>
			 	<if test="modifier != null and modifier != ''">
		          and modifier = #{modifier}
		         </if>
			 	<if test="modifierCode != null and modifierCode != ''">
		          and modifier_code = #{modifierCode}
		         </if>
			 	<if test="gmtModified != null">
		          and gmt_modified = #{gmtModified}
		         </if>
			 	<if test="status != null">
		          and status = #{status}
		         </if>
			 	<if test="bak01 != null and bak01 != ''">
		          and bak01 = #{bak01}
		         </if>
			 	<if test="bak02 != null and bak02 != ''">
		          and bak02 = #{bak02}
		         </if>
			 	<if test="bak03 != null and bak03 != ''">
		          and bak03 = #{bak03}
		         </if>
			 	<if test="bak04 != null and bak04 != ''">
		          and bak04 = #{bak04}
		         </if>
			 	<if test="bak05 != null and bak05 != ''">
		          and bak05 = #{bak05}
		         </if>
	</sql>
	
	<insert id="save" parameterType="top.buukle.daoEntity.mc.entity.AsyncTask" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO async_task ( 
			class_name,method_name,parameter,description,alarm_mail,start_alarm,stop_alarm,error_alarm,cron_expression,start_date,type,runtype,creator,creator_code,gmt_created,modifier,modifier_code,gmt_modified,status,bak01,bak02,bak03,bak04,bak05
		)
	    VALUES (
            <include refid="Base_Column_insert" /> 
        )
     	<selectKey resultType="int" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
	</insert>

	<update id="update" parameterType="top.buukle.daoEntity.mc.entity.AsyncTask" flushCache="true">
        UPDATE async_task 
        <set>
		        	<if test="className!= null  and className != ''">
		        		class_name = #{className,jdbcType=VARCHAR} ,
		        	</if>
		        	<if test="methodName!= null  and methodName != ''">
		        		method_name = #{methodName,jdbcType=VARCHAR} ,
		        	</if>
		        	<if test="parameter!= null  and parameter != ''">
		        		parameter = #{parameter,jdbcType=VARCHAR} ,
		        	</if>
		        	<if test="description!= null  and description != ''">
		        		description = #{description,jdbcType=VARCHAR} ,
		        	</if>
		        	<if test="alarmMail!= null  and alarmMail != ''">
		        		alarm_mail = #{alarmMail,jdbcType=VARCHAR} ,
		        	</if>
   		        	<if test="startAlarm!= null">
		        		start_alarm = #{startAlarm,jdbcType=INTEGER} ,
		        	</if>
   		        	<if test="stopAlarm!= null">
		        		stop_alarm = #{stopAlarm,jdbcType=INTEGER} ,
		        	</if>
   		        	<if test="errorAlarm!= null">
		        		error_alarm = #{errorAlarm,jdbcType=INTEGER} ,
		        	</if>
		        	<if test="cronExpression!= null  and cronExpression != ''">
		        		cron_expression = #{cronExpression,jdbcType=VARCHAR} ,
		        	</if>
		        	<if test="startDate!= null  and startDate != ''">
		        		start_date = #{startDate,jdbcType=TIMESTAMP} ,
		        	</if>
   		        	<if test="type!= null">
		        		type = #{type,jdbcType=INTEGER} ,
		        	</if>
   		        	<if test="runType!= null">
		        		runtype = #{runType,jdbcType=INTEGER} ,
		        	</if>
		        	<if test="creator!= null  and creator != ''">
		        		creator = #{creator,jdbcType=VARCHAR} ,
		        	</if>
		        	<if test="creatorCode!= null  and creatorCode != ''">
		        		creator_code = #{creatorCode,jdbcType=VARCHAR} ,
		        	</if>
		        	<if test="gmtCreated!= null  and gmtCreated != ''">
		        		gmt_created = #{gmtCreated,jdbcType=TIMESTAMP} ,
		        	</if>
		        	<if test="modifier!= null  and modifier != ''">
		        		modifier = #{modifier,jdbcType=VARCHAR} ,
		        	</if>
		        	<if test="modifierCode!= null  and modifierCode != ''">
		        		modifier_code = #{modifierCode,jdbcType=VARCHAR} ,
		        	</if>
		        	<if test="gmtModified!= null  and gmtModified != ''">
		        		gmt_modified = #{gmtModified,jdbcType=TIMESTAMP} ,
		        	</if>
   		        	<if test="status!= null">
		        		status = #{status,jdbcType=INTEGER} ,
		        	</if>
		        	<if test="bak01!= null  and bak01 != ''">
		        		bak01 = #{bak01,jdbcType=VARCHAR} ,
		        	</if>
		        	<if test="bak02!= null  and bak02 != ''">
		        		bak02 = #{bak02,jdbcType=VARCHAR} ,
		        	</if>
		        	<if test="bak03!= null  and bak03 != ''">
		        		bak03 = #{bak03,jdbcType=VARCHAR} ,
		        	</if>
		        	<if test="bak04!= null  and bak04 != ''">
		        		bak04 = #{bak04,jdbcType=VARCHAR} ,
		        	</if>
		        	<if test="bak05!= null  and bak05 != ''">
		        		bak05 = #{bak05,jdbcType=VARCHAR} ,
		        	</if>
	       		 id = #{id,jdbcType=INTEGER} 
	      </set>
        WHERE 
	        id = #{id,jdbcType=INTEGER} 
	</update>   
	
	<delete id="delete" parameterType="string">
	    delete from async_task where id=#{id}
	</delete>
	
	<select id="getAsyncTaskByParas" resultMap="resultAsyncTask" parameterType="java.util.Map">
		select <include refid="Base_query_column" /> from async_task where 1=1
		<include refid="Base_query_where" />
	</select>
	
	<select id="getAsyncTaskById" resultMap="resultAsyncTask" parameterType="java.lang.Integer">
		select <include refid="Base_query_column" /> from async_task where id=#{id}
	</select>
</mapper>